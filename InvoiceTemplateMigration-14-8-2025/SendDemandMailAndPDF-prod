//testclass : testSendDemandMailAndPDF
public class SendDemandMailAndPDF {
    
    
 /*  global class flowInput {                  
        
        @InvocableVariable
        global id currentRecordId;
        
    }
    
    @InvocableMethod(label='Send Demandpdf') 
    
    global static void currentRecordID(flowInput[] currentInput){      
        
        system.debug('Ids::'+currentInput);
         system.debug('Inside SendDemandMailAndPDF');
        ID dId;
        
        for(flowInput singleID :currentInput ){
            
            
            dId = singleID.currentRecordId;                            
            
            system.debug('recordID= '+singleID + ' rID = '+dId);
            
            
            sobject sO = dId.getSobjectType().newsobject(dId);
            
            system.debug('sO='+sO);
            
        }
      */ 
    
    @InvocableMethod(label='Send Demandpdf') 
    public static void sendDemandMail(List<id> recordId)
    {
        
        List < Demand__c > diList = [Select Id, Name , Invoice_Date__c, Due_Date__c,Booking__c,
                                     Invoice_Number__c, Booking__r.Opportunity__r.Name,  Booking__r.Opportunity__r.Unit__r.Name,
                                     Booking__r.Opportunity__r.Unit__r.Tower__r.Name, Booking__r.Opportunity__r.Unit__r.Tower__r.Cluster__r.Name,
                                     AttachmentId__c,Booking__r.Primary_Applicant_Email__c,Booking__r.Unit__c,Email_Sent__c,
                                     Booking__r.Unit__r.name,SAP_Invoice_No__c,Payment_Milestones__c,SAP_Posting_Date__c,
                                     Total_Amount_with_Tax_Demanded__c,Booking__r.Project__r.Name,Booking__r.Relationship_Manager__r.Email,
                                     Booking__r.Relationship_Manager__c,Payment_Milestones__r.Milestone_Name__c,
                                     Booking__r.Primary_Applicant_Name__c,Customization_Payment_Milestones__c,Booking__r.OwnerId from Demand__c where id IN: recordId];
        system.debug('DList size:::'+diList.size());
        for(Demand__c d1 : diList){
            
            PageReference pageRef = new PageReference('/apex/showDemandPreviewNew');
            pageRef.getParameters().put('mode', 'raise');
            pageRef.getParameters().put('letterHead', '1');
            pageRef.getParameters().put('previewId', d1.Booking__r.Unit__c);
            pageRef.getParameters().put('invoiceDueDate', d1.Due_Date__c.format());
            pageRef.getParameters().put('invoiceNumber', d1.SAP_Invoice_No__c);
            if(d1.Payment_Milestones__c != null)
                pageRef.getParameters().put('forMilestone', d1.Payment_Milestones__c);
            
            PageReference pageRef2 = new PageReference('/apex/SendDemandMail');
            pageRef2.getParameters().put('unitId', d1.Booking__r.Unit__c);
            pageRef2.getParameters().put('invoiceDueDate', d1.Due_Date__c.format());
            pageRef2.getParameters().put('invoiceNumber', d1.SAP_Invoice_No__c);
            system.debug('Email_Sent__c::'+d1.Email_Sent__c);
            pageRef2.getParameters().put('EmailSent', d1.Email_Sent__c ? 'true':'false');
            if(d1.Payment_Milestones__c != null)
                pageRef2.getParameters().put('milestoneId', d1.Payment_Milestones__c);
            
            Blob body;
            Blob htmlBody;
            try {
                // returns the output of the page as a PDF
                if(!test.isRunningTest()) {
                    body = pageRef.getContentAsPDF();
                    htmlBody = pageRef2.getContent();
                }
                else {
                    htmlBody = Blob.valueof('Dummy COntent for Test Methods');
                    body = Blob.valueOf('Some Text');
                }    
            } catch (VisualforceException e) {
                system.debug('in the catch block');
                body = Blob.valueOf('Some Text');
            }
            ContentVersion cont = generateNewContentVersion(body, d1);
            createFeedItem(cont.Id, d1);
            
            //// Email to customer///////////
            
            
            Messaging.SingleEmailMessage message = new Messaging.SingleEmailMessage();
            List<Messaging.SingleEmailMessage> allMails = new List<Messaging.SingleEmailMessage>();
            
            List<Messaging.Emailfileattachment> fileAttachments = new List<Messaging.Emailfileattachment>();
            for (ContentVersion c : [SELECT id,VersionData,Title FROM ContentVersion WHERE Id =: cont.id])
            {
                Messaging.Emailfileattachment efa = new Messaging.Emailfileattachment();
                efa.setFileName(c.Title+'.pdf');
                efa.setBody(c.VersionData);
                fileAttachments.add(efa);
            }
            OrgWideEmailAddress[] owea = [select Id from OrgWideEmailAddress 
                                          where Address =: 'finance.billing@total-environment.com'];
            
            
            if ( owea.size() > 0 ) {
                message.setOrgWideEmailAddressId(owea.get(0).Id);
            }  
            // String Email;
            //Email = 'aniket.kale@stetig.in';
            
            List<Applicant_Details__c> applist = new List<Applicant_Details__c>();
            applist = [Select id,name,Email_Address__c,Salutation__c from Applicant_Details__c where Booking__c =: diList[0].Booking__c];
            
            //String[] toAddresses =  new String[] {Email}; 
            List<String> toAddresses = new List<String>();
            List<String> toCCAddresses = new List<String>();
            
            //String Subject = d1.Booking__r.Project__r.Name+' '+d1.Booking__r.Unit__r.name +'| Milestone notification.';
            String Subject = d1.Booking__r.Unit__r.name +' | '+ d1.Booking__r.Project__r.Name+' | '+ d1.Payment_Milestones__r.Milestone_Name__c;
          //  toAddresses.add('vishwajeet.patil@stetig.in');
            for(Applicant_Details__c ap :applist ){
                if(ap.Email_Address__c != null){
                    toAddresses.add(ap.Email_Address__c);
                }
            }
            if(d1.Booking__r.Relationship_Manager__c != null){
                toCCAddresses.add(d1.Booking__r.Relationship_Manager__r.Email); 
            }
            //toCCAddresses.add('finance@total-environment.com'); 
            //toAddresses.add('vikash.prasad@total-environment.com');  
            //toAddresses.add(d1.Booking__r.Primary_Applicant_Email__c);
            //toCCAddresses.add(d1.Booking__r.OwnerId);
            //message.setTemplateId(et.id);
            message.setToAddresses(toAddresses);
            if(!toCCAddresses.isEmpty()){
                message.setCcAddresses(toCCAddresses);
            }
            message.setFileAttachments(fileAttachments);
            message.setSubject(Subject);
            message.setHtmlBody(htmlBody.toString());
            //message.setTargetObjectId(primaryContact);
            //message.setWhatId(primaryAccount);
            message.setSaveAsActivity(true);
            message.setWhatId(diList[0].Booking__c);
            allMails.add(message);
            Messaging.sendEmail(allMails); 
            //Messaging.sendEmail(new Messaging.SingleEmailMessage[] { allMails });
            System.debug('You have made ' + Limits.getEmailInvocations() + ' email calls out of ' + Limits.getLimitEmailInvocations() + ' allowed');
        }
    }
    public static ContentVersion generateNewContentVersion(Blob fileContent, Demand__c d) {
        ContentVersion cont = new ContentVersion();
        //cont.Title = d.Invoice_Number__c + '-' + d.Booking__r.Opportunity__r.Name + '-' + d.Booking__r.Opportunity__r.Unit__r.Tower__r.Cluster__r.Name + '-' + d.Booking__r.Opportunity__r.Unit__r.Tower__r.Name + '-' + d.Booking__r.Opportunity__r.Unit__r.Name + system.now();
        cont.Title = 'Invoice - '+ d.Booking__r.Unit__r.name +' - '+ d.Payment_Milestones__r.Milestone_Name__c;
        cont.VersionData = fileContent;
        cont.PathOnClient = d.Invoice_Number__c +'.pdf';
        cont.ContentLocation = 'S';
        cont.Description = 'Demand for :' + d.Booking__r.Opportunity__r.Name;
        cont.TagCSV = 'Demand for :' + d.Booking__r.Opportunity__r.Name;
        insert cont;
        return cont;
    }
     public static void createFeedItem(Id contentId, Demand__c d )
    {
        List<FeedItem> flList = new List<FeedItem>();
        if(!Test.isRunningTest()){
            Id conDoc = [SELECT ContentDocumentId FROM ContentVersion WHERE Id =:contentId].ContentDocumentId;
            ContentWorkspace cw = [SELECT Id,name FROM ContentWorkspace where name =: 'Demands'];
            //Create ContentDocumentLink for putting the doc in the Folder.
            ContentDocumentLink cDe = new ContentDocumentLink();
            cDe.ContentDocumentId = conDoc;
            cDe.LinkedEntityId = cw.Id;//'058p00000002wa9'; //'production:: 0582u000000PtZV';   // sandbox::: '058p00000002wa9'; // you can use libraryId, objectId,GroupId etc 
            cDe.ShareType = 'I'; // Inferred permission, checkout description of ContentDocumentLink object for more details
            insert cDe;
            
            
            FeedItem elm = new FeedItem(Body = 'Post with related document body', ParentId = d.Id, RelatedRecordId = contentId, Type = 'ContentPost');
            flList.add(elm);
            
            insert flList;
        }
    }
    
}
