public class FetchFilesForApprovalController {
    @AuraEnabled(cacheable=true)
    public static Map<ID, String> getRelatedFilesByRecordId(String recordId) {
        // Get record file IDs        
        List<ProcessInstanceWorkitem> piwi = [SELECT Id, ProcessInstanceId, OriginalActorId, ActorId FROM ProcessInstanceWorkitem where id=:recordId];
        List<ProcessInstance> pi = [SELECT Id, ProcessDefinitionId, TargetObjectId, Status FROM ProcessInstance where id =: piwi[0].ProcessInstanceId];
        List<ContentDocumentLink> files = [SELECT ContentDocumentId,LinkedEntity.Name FROM ContentDocumentLink WHERE LinkedEntityId = :pi[0].TargetObjectId];
        List<ID> fileIDs = new List<ID>();
        Set<Id> recDemIds = new Set<Id>();
        
        for (ContentDocumentLink docLink : files) {
            if(docLink.LinkedEntity.Name.substring(0, 1) == 'R' || docLink.LinkedEntity.Name.substring(0, 1) == 'D' || docLink.LinkedEntity.Name.substring(0, 1) == 'Q'){
                fileIDs.add(docLink.ContentDocumentId);
            }
        }
        
        List<ContentVersion> docs = [SELECT ContentDocumentId, FileExtension, Title 
                                     FROM ContentVersion WHERE ContentDocumentId IN : fileIDs];
        Map<ID, String> mapIdTitle = new Map<ID, String>();
        for (ContentVersion docLink : docs) {
            mapIdTitle.put(docLink.ContentDocumentId, docLink.Title);
        }
        return mapIdTitle;
    }
}
